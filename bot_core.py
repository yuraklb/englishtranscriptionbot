import os
from telegram.ext import Updater, MessageHandler, Filters
import requests

API_URL = "https://api.dictionaryapi.dev/api/v2/entries/en/{}"

TOKEN = os.getenv("TELEGRAM_API_KEY")

def get_transcription(word):
    url = API_URL.format(word.lower())
    try:
        res = requests.get(url)
        data = res.json()
        if isinstance(data, list):
            phonetics = data[0].get("phonetics", [])
            for p in phonetics:
                if "text" in p:
                    return p["text"]
        return "‚ùå –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}"

def handle(update, context):
    text = update.message.text.strip()
    if not text.isalpha() or " " in text:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ.")
        return
    
    transcription = get_transcription(text)
    update.message.reply_text(f"üìñ –°–ª–æ–≤–æ: *{text}*\nüî§ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: `{transcription}`", parse_mode="Markdown")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
